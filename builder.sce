function txt=write_header(u,builder_name,tt_path)
 tt_loader1=['//Loader Script of modnum for scilab'
             '//Generated by '+builder_name
             ;'';
             '//Redefine stacksize'
             'sz=stacksize(); //default 5e6';
             'while (sz(1)<50e6) then';
             '  ierr=execstr(''stacksize(sz(1)+5e6)'',''errcatch'');';
             '  if ierr<>0 then break, end';
             '  sz=stacksize();';
             'end';
             'clear sz;';
             'clear ierr;';'';
             '//Define IsItChaos root path']
 if MSDOS then
   tt_loader=[tt_loader1;
              tt_path+'=get_absolute_file_path(''loader.sce'');';
              'if part('+tt_path+',length('+tt_path+'))==''\'' then';
              '  '+tt_path+'=part('+tt_path+',1:length('+tt_path+')-1);';
              'end']
 else
   tt_loader=[tt_loader1;
              tt_path+'=get_absolute_file_path(''loader.sce'');';
              'if part('+tt_path+',length('+tt_path+'))==''/'' then';
              '   '+tt_path+'=part('+tt_path+',1:length('+tt_path+')-1);';
              'end']
 end
 txt=tt_loader1;
 fprintf(u,"%s\n",tt_loader);
endfunction

function txt=write_inf_lib(u,path,tt,flag,tt_path)
 if size(path,'*')==size(tt,'*') then
   if MSDOS then
    path=pathconvert(path,%f,%t,'w')+'\';
   else
    path=path+'/';
   end
   for i=1:size(path,'*') 
    if flag then
      tt_loader=['//Load '+tt(i)+' library' 
                 tt(i)+'=lib('+tt_path+'+'''+path(i)+''');';'';
                ]
      txt(i)=tt_loader(2);
    else
     tt_loader=tt(i)+'=lib('+tt_path+'+'''+path(i)+''');'
     txt(i)=tt_loader;
    end
    fprintf(u,"%s\n",tt_loader);
   end
 else
  //Affiche un message d'erreur
  printf("path and tt must have the same size");
  abort
 end
endfunction

function []=build_lib(path,tt,tt_path)
 if size(path,'*')==size(tt,'*') then
   for i=1:size(path,'*') 
    //Affiche un message
    printf("Build "+tt(i)+" Scilab library\n");
    //construit la libraire tt dans le chemin path
    str='genlib('''+tt(i)+''','+tt_path+'+'''+path(i)+''',%t);'
    ierr=execstr(str,'errcatch')
    if ierr<> 0 then
     printf("Build lib : error\n");
     abort
    end
   end
 else
  printf("path and tt must have the same size");
  abort
 end
endfunction


function tt=def_IsItChaos_path()
  tt=get_absolute_file_path('builder.sce');
  end_char=part(tt,length(tt));
  if end_char=='/'|end_char=='\' then
    tt=part(tt,1:length(tt)-1);
  end
endfunction

//change mode, lines behavior and function protection
sav_mode=mode();
mode(-1);
sav_lines=lines();
sav_lines=sav_lines(2);
lines(0);
sav_prot=funcprot();
funcprot(0);

//define IsItChaos path
IsItChaos=def_IsItChaos_path();
clear def_IsItChaos_path;
tt_path='IsItChaos';

//generate loader.sce

  //open loader.sce file for writting
  ierror=execstr('u=mopen(IsItChaos+""/loader.sce"",""w"");','errcatch');
  if ierror<>0 then
    printf("Can''t write loader file.\nVerify your writting access.\n");
  else
    //write Header of loader.sce file
    txt=write_header(u,'builer.sce',tt_path);
    ierr=execstr(txt,'errcatch');

    //the txt of the loader
    tt_loader=[''
               '//change function protection'
               'sav_prot=funcprot();'
               'funcprot(0);'
               ''
               'chdir('''+IsItChaos+''');'
               '//Define IsItChaos root path'];

   //write in loader.sce
    fprintf(u,"%s\n",tt_loader);

    //Build and load all scilab library
    libs     = ['Lib_IsItChaos'];
    rep_lib  = '/sci/';
    lib_name = 'Lib_IsItChaos';
    build_lib(rep_lib,lib_name);
    txt      = write_inf_lib(u,rep_lib,lib_name,1,tt_path);
    ierr     = execstr(txt,'errcatch');

    tt_loader=[''
               'funcprot(sav_prot);'
               'clear sav_prot;'];

    //write in loader.sce
    fprintf(u,"%s\n",tt_loader);

    //Close loader.sce
    mclose(u);
    printf("Write a loader.sce file\n");

    //write a .scilab file
    if ~MSDOS then
      txt=mgetl(Ie a loader.sce file\n");

    //write a .scilab file
    if ~MSDOS then
      txt=mgetl(IsItChaos+'/loader.sce');
      mputl(txt,IsItChaos+'/.scilab');
      printf("Write a .scilab file\n");
    end
    clear txt;
  end
  clear ierror;

//retrieve original mode, lines behavior and function protection
mode(sav_mode);
lines(sav_lines);
funcprot(sav_prot);
clear sav_mode; clear sav_lines; clear sav_prot;
